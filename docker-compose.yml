services:
  iam-service:
    container_name: iam-service
    networks:
      - iam-service-network
    build:
      context: .
    ports:
      - "3000:3000"
    command: npm run dev
    develop:
      watch:
        - action: sync
          path: ./
          target: /app
          ignore:
            - node_modules/
        - action: rebuild
          path: ./package.json
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
  postgres:
    container_name: postgres
    networks:
      - iam-service-network
    image: postgres:latest
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      DB_PORT: ${DB_PORT}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_NAME}"]
      interval: 3s
      timeout: 3s
      retries: 10
volumes:
  postgres_data:
networks:
  iam-service-network:
    driver: bridge